version: '2.1'
services:

  mysql:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    container_name: mysql
    restart: always
    ports:
      - "33600:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - /opt/mysql_data_dm3:/var/lib/mysql
    healthcheck:
      test: ["CMD","mysqladmin","ping","-h","mysql","-u","root","-p$$MYSQL_ROOT_PASSWORD"]
      timeout: 45s
      interval: 10s
      retries: 10

  off_chain_blocks_observer:
    image: offchain-watcher:0.1
    build: ./docker/offchain/
    restart: always
    container_name: off_chain_blocks_observer
    entrypoint: "python block_observer.py freq=1 topic=block_clock network=mainnet"
    # volumes:
    #   - ./docker/offchain/src:/app
    environment:
      SCAN_KEY:
      ENV: DEV
      DEV_KAFKA_HOST: 'kafka:9092'
    depends_on:
      - kafka


  observer_aave_pool:
    image: offchain-watcher:0.1
    build: ./docker/offchain/
    restart: always
    depends_on:
      - kafka
      - zookeeper
    container_name: observer_aave_pool
    entrypoint: "python contracts_observer.py topic_in=block_clock topic_out=aave_v2_tx network=mainnet"
    # volumes:
    #   - ./docker/offchain/src:/app
    environment:
      WEB3_INFURA_PROJECT_ID: 
      SCAN_KEY:
      LIST_ADDRESSES: '["0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9"]'
      CONSUMER_GROUP: '["aave_group1"]'
      ENV: DEV
      DEV_MYSQL_HOST: 'mysql'
      DEV_MYSQL_USER: 'root'
      DEV_MYSQL_PASSWD: 'root'
      DEV_KAFKA_HOST: 'kafka:9092'

  observers_erc20_stable_coins:
    image: offchain-watcher:0.1
    build: ./docker/offchain/
    restart: always
    depends_on:
      - kafka
      - zookeeper
    container_name: observers_erc20_stable_coins
    entrypoint: "python contracts_observer.py topic_in=block_clock topic_out=erc20_stable_coin_tx network=mainnet"
    # volumes:
    #   - ./docker/offchain/src:/app
    environment:
      WEB3_INFURA_PROJECT_ID:
      SCAN_KEY:
      LIST_ADDRESSES: '["0xdAC17F958D2ee523a2206206994597C13D831ec7", "0x6B175474E89094C44Da98b954EedeAC495271d0F", "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48", "0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd", "0xa693B19d2931d498c5B318dF961919BB4aee87a5"]'
      CONSUMER_GROUP: '["erc20_stable_coins_group1", "erc20_stable_coins_group2","erc20_stable_coins_group3", "erc20_stable_coins_group4","erc20_stable_coins_group5"]'
      ENV: DEV
      DEV_MYSQL_HOST: 'mysql'
      DEV_MYSQL_USER: 'root'
      DEV_MYSQL_PASSWD: 'root'
      DEV_KAFKA_HOST: 'kafka:9092'



  observers_erc20_crypto_coins:
    image: offchain-watcher:0.1
    build: ./docker/offchain/
    restart: always
    depends_on:
      - kafka
      - zookeeper
    container_name: observers_erc20_crypto_coins
    entrypoint: "python contracts_observer.py topic_in=block_clock topic_out=erc20_crypto_coin_tx network=mainnet"
    volumes:
      - ./docker/offchain/src:/app
    environment:
      WEB3_INFURA_PROJECT_ID:
      SCAN_KEY:
      LIST_ADDRESSES: '["0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599", "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2", "0x514910771AF9Ca656af840dff83E8264EcF986CA", "0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9", "0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984"]'
      CONSUMER_GROUP: '["erc20_crypto_group1", "erc20_crypto_group2","erc20_crypto_group3", "erc20_crypto_group4","erc20_crypto_group5"]'
      ENV: DEV
      DEV_MYSQL_HOST: 'mysql'
      DEV_MYSQL_USER: 'root'
      DEV_MYSQL_PASSWD: 'root'
      DEV_KAFKA_HOST: 'kafka:9092'



  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: [ "CMD", "nc", "-z", "zookeeper", "2181" ]
      timeout: 45s
      interval: 10s
      retries: 10

  kafka:
    image: confluentinc/cp-server:7.0.1
    container_name: kafka-broker
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - ./mnt/kafka:/kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:9092  
    healthcheck:
      test: [ "CMD", "nc", "-z", "kafka", "9092" ]
      timeout: 45s
      interval: 10s
      retries: 10


  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.1
    container_name: kafka-control-center
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_CONNECT_CLUSTER: http://kafka-connect:8083
      PORT: 9021
    healthcheck:
      test: [ "CMD", "nc", "-z", "control-center", "9021" ]
      timeout: 45s
      interval: 10s
      retries: 10
